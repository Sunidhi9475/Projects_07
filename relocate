#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <conio.h>

// Function to convert the hexadecimal into decimal
int hexaToDec(char hexVal[])
{
    int len = strlen(hexVal), base = 1, dec_val = 0;
    for (int i = len - 1; i >= 0; i--)
    {
        if (hexVal[i] >= '0' && hexVal[i] <= '9')
        {
            dec_val += (int)(hexVal[i] - '0') * base;
            base = base * 16;
        }
        else if (hexVal[i] >= 'A' && hexVal[i] <= 'F')
        {
            dec_val += (int)(hexVal[i] - 'A' + 10) * base;
            base = base * 16;
        }
    }
    return dec_val;
}

// Function to convert decimal to hexadecimal
char *decToHexa(int n, char hexa[])
{
    int i = 0;
    while (n != 0)
    {
        int rem = 0;
        rem = n % 16;
        if (rem < 10)
        {
            hexa[i++] = rem + '0';
        }
        else
        {
            hexa[i++] = rem + 'A' - 10;
        }
        n = n / 16;
    }
    hexa[i] = '\0';
    int j = 0, k = i - 1;
    while (j < k)
    {
        char temp = hexa[j];
        hexa[j] = hexa[k];
        hexa[k] = temp;
        j++;
        k--;
    }
    return hexa;
}

int main()
{
    char a[100];
    printf("\nRead the address available in operating system :\n");
    scanf("%s", a);
    if (a[0] == '+')
    {
        int l = 0; // Start at index 0
        while (a[l] != '\0' && a[l + 1] != '\0')
        {
            a[l] = a[l + 1];
            l++;
        }
        a[l] = '\0';

        printf("%s\n", a);
        FILE *fp1, *fp2;
        fp1 = fopen("C:\\Users\\sunid\\Downloads\\MyObjectCode.txt", "r");
        fp2 = fopen("C:\\Users\\sunid\\Downloads\\NewObjectCode.txt", "w");
        char line[1000];
        printf("\nMemory address");
        printf("        Contents");
        printf("\n---------------------------------------------\n");
        while (fgets(line, sizeof(line), fp1) != NULL)
        {
            char text[1000];
            text[0] = '\0';
            strcat(text, line);
            // In string text firt text record in read
            if (text[0] == 'T')
            {
                // we enter inside the loop only if it is a text record
                char modified_address[1000], temp[1000], hexa[1000];
                int i = 2, k = 0;
                temp[k] = text[i];
                k++;
                while (text[i] != '^')
                {
                    temp[k] = text[i];
                    i++;
                    k++;
                }
                temp[k] = '\0';
                int val = hexaToDec(temp) + hexaToDec(a);
                decToHexa(val, hexa);
                strcpy(modified_address, hexa);
                printf("%s\t", modified_address);

                int mx = 4, cnt_for_space = 0, cnt_for_new_line = 1;
                i = 12;
                while (text[i + 1] != '\0')
                {
                    if (text[i] != '^' && cnt_for_space < 8)
                    {
                        printf("%c", text[i]);
                        cnt_for_space++;
                    }
                    else if (text[i] != '^' && cnt_for_space >= 8)
                    {
                        if (cnt_for_new_line < mx)
                        {
                            printf(" %c", text[i]);
                            cnt_for_space = 1;
                            cnt_for_new_line++;
                        }
                        else
                        {
                            printf("\n");
                            cnt_for_new_line = 1;
                            cnt_for_space = 0;
                            hexa[0] = '\0';
                            val = hexaToDec(modified_address) + 16;
                            decToHexa(val, hexa);
                            strcpy(modified_address, hexa);
                            printf("%s\t", modified_address);
                            i--;
                        }
                    }
                    i++;
                }
                // printf("cnt for new line = %d\n",cnt_for_new_line);
                while (cnt_for_new_line <= mx)
                {
                    while (cnt_for_space < 8)
                    {
                        printf("X");
                        cnt_for_space++;
                    }
                    printf(" ");
                    cnt_for_new_line++;
                    cnt_for_space = 0;
                }
                printf("\n.\n");
                printf(".\n");
            }
            line[0] = '\0';
        }

        fclose(fp1);
        fp1 = fopen("C:\\Users\\sunid\\Downloads\\MyObjectCode.txt", "r");
        printf("\nObject Program with realocation by Modification records\n\n");
        line[0] = '\0';
        while (fgets(line, sizeof(line), fp1) != NULL)
        {
            char record[1000];
            record[0] = '\0';
            strcat(record, line);
            if (record[0] == 'M')
            {
                char temp[100];
                strcpy(temp, record);
                int cntr = strlen(temp) - 1;
                int i = 0;
                temp[cntr++] = '+';
                while (a[i] != '\0')
                {
                    temp[cntr++] = a[i];
                    i++;
                }
                temp[cntr++] = '\0';
                printf("%s\n", temp);
            }
            else
                printf("%s", record);
        }
        printf("\n\n");
    }

    else // a[0] == '-'
    {
        int l = 0; // Start at index 0
        while (a[l] != '\0' && a[l + 1] != '\0')
        {
            a[l] = a[l + 1];
            l++;
        }
        a[l] = '\0';
        FILE *fp1, *fp2;
        fp1 = fopen("C:\\Users\\sunid\\Downloads\\ObjectCode.txt", "r");
        fp2 = fopen("C:\\Users\\sunid\\Downloads\\.txt", "w");
        char line[1000];
        printf("\nMemory address");
        printf("        Contents");
        printf("\n---------------------------------------------\n");
        while (fgets(line, sizeof(line), fp1) != NULL)
        {
            char text[1000];
            text[0] = '\0';
            strcat(text, line);
            // In string text firt text record in read
            if (text[0] == 'T')
            {
                // we enter inside the loop only if it is a text record
                char modified_address[1000], temp[1000], hexa[1000];
                int i = 2, k = 0;
                temp[k] = text[i];
                k++;
                while (text[i] != '^')
                {
                    temp[k] = text[i];
                    i++;
                    k++;
                }
                temp[k] = '\0';
                int val = hexaToDec(temp) + hexaToDec(a);
                decToHexa(val, hexa);
                strcpy(modified_address, hexa);
                printf("-%s\t", modified_address);

                int mx = 4, cnt_for_space = 0, cnt_for_new_line = 1;
                i = 12;
                while (text[i + 1] != '\0')
                {
                    if (text[i] != '^' && cnt_for_space < 8)
                    {
                        printf("%c", text[i]);
                        cnt_for_space++;
                    }
                    else if (text[i] != '^' && cnt_for_space >= 8)
                    {
                        if (cnt_for_new_line < mx)
                        {
                            printf(" %c", text[i]);
                            cnt_for_space = 1;
                            cnt_for_new_line++;
                        }
                        else
                        {
                            printf("\n");
                            cnt_for_new_line = 1;
                            cnt_for_space = 0;
                            hexa[0] = '\0';
                            val = hexaToDec(modified_address) + 16;
                            decToHexa(val, hexa);
                            strcpy(modified_address, hexa);
                            printf("-%s\t", modified_address);
                            i--;
                        }
                    }
                    i++;
                }
                // printf("cnt for new line = %d\n",cnt_for_new_line);
                while (cnt_for_new_line <= mx)
                {
                    while (cnt_for_space < 8)
                    {
                        printf("X");
                        cnt_for_space++;
                    }
                    printf(" ");
                    cnt_for_new_line++;
                    cnt_for_space = 0;
                }
                printf("\n.\n");
                printf(".\n");
            }
            line[0] = '\0';
        }

        fclose(fp1);
        fp1 = fopen("C:\\Users\\sunid\\Downloads\\ObjectCode.txt", "r");
        printf("\nObject Program with realocation by Modification records\n\n");
        line[0] = '\0';
        while (fgets(line, sizeof(line), fp1) != NULL)
        {
            char record[1000];
            record[0] = '\0';
            strcat(record, line);
            if (record[0] == 'M')
            {
                char temp[100];
                strcpy(temp, record);
                int cntr = strlen(temp) - 1;
                int i = 0;
                temp[cntr++] = '-';
                while (a[i] != '\0')
                {
                    temp[cntr++] = a[i];
                    i++;
                }
                temp[cntr++] = '\0';
                printf("%s\n", temp);
            }
            else
                printf("%s", record);
        }
        printf("\n\n");
    }
    return 0;
}

/*
H^COPY^000000^001077
T^000000^1D^17202D^69202D^4B107036^032026^290000^332007^4B10705D^3F2FEC^032010
T^00001D^13^0F2016^010003^0F200D^4B10705D^3E2003^454F46
T^001036^1D^B410^B400^B440^75107000^E32019^332FFA^DB2013^A004^332008^57C003^B850
T^001053^1D^3B2FEA^134000^4F0000^F1^B410^774000^E32011^332FFA^53C003^DF2008^B850
T^001070^07^3B2FEF^4F0000^05
M^000007^05
M^000014^05
M^000027^05
x^000035^05
E^000000
*/

/*
#include <stdio.h>
#include <stdlib.h>
#include <conio.h>
#include <string.h>
// Function to convert the hexadecimal into decimal
int hexaToDec(char hexVal[])
{
    int len = strlen(hexVal), base = 1, dec_val = 0;
    for (int i = len - 1; i >= 0; i--)
    {
        if (hexVal[i] >= '0' && hexVal[i] <= '9')
        {
            dec_val += (int)(hexVal[i] - '0') * base;
            base = base * 16;
        }
        else if (hexVal[i] >= 'A' && hexVal[i] <= 'F')
        {
            dec_val += (int)(hexVal[i] - 'A' + 10) * base;
            base = base * 16;
        }
    }
    return dec_val;
}

// Function to convert decimal to hexadecimal
char *decToHexa(int n, char hexa[])
{
    int i = 0;
    while (n != 0)
    {
        int rem = 0;
        rem = n % 16;
        if (rem < 10)
        {
            hexa[i++] = rem + '0';
        }
        else
        {
            hexa[i++] = rem + 'A' - 10;
        }
        n = n / 16;
    }
    hexa[i] = '\0';
    int j = 0, k = i - 1;
    while (j < k)
    {
        char temp = hexa[j];
        hexa[j] = hexa[k];
        hexa[k] = temp;
        j++;
        k--;
    }
    return hexa;
}

int main()
{
    FILE *fp1, *fp2;
    fp1 = fopen("ObjectCode.txt", "r");
    fp2 = fopen("MyObjectCode.txt", "w");
    char line[1000];
    char a[1000];
    printf("Enter address\n");
    scanf("%s",a);
    while (fgets(line, sizeof(line), fp1) != NULL)
    {
        char text[1000];
        text[0] = '\0';
        strcat(text, line);
        int text_size = strlen(text);
        // printf("new text line is %s\t with length %d\n",text,text_size);
        if(text[0]=='T')
        {
            int i = 0;
            while(i<text_size)
            {
                if(text[i]=='^')
                {
                    i++;
                    int started_at = i;
                    started_at+=3;
                    int k = 0;
                    char str[1000];
                    str[0] = '\0';
                    while(text[i]!='^' && text[i]!='\0')
                    {
                        str[k++] = text[i];
                        i++;
                    }
                    str[k]='\0';
                    i--;
                    if(strlen(str)==8)
                    {
                        // we need to modify
                        int len = strlen(str);
                        char strr[1000];
                        int p = 0;
                        int t = 3;
                        while(t<len)
                        {
                            strr[p++] = str[t];
                            t++;
                        }
                        strr[p] = '\0';
                        strcpy(str,strr);
                        int temp1 = hexaToDec(str);
                        int temp2 = hexaToDec(a);
                        temp1+=temp2;
                        char modified_str[1000],ans[1000];
                        modified_str[0] = '\0';
                        strcpy(modified_str,decToHexa(temp1,ans));


                        // I got my modified string
                        int tr = started_at, q = 0;
                        len = strlen(modified_str);
                        if(strlen(modified_str)==4)
                        {
                            text[tr++] = '0';
                        }
                        while(q<len)
                        {
                            text[tr] = modified_str[q];
                            tr++;
                            q++;
                        }
                        // printf("%s\n",text);
                    }
                }
                i++;
            }
            fprintf(fp2, "%s", text);
        }
        else
        fprintf(fp2, "%s", text);
        line[0]='\0';
    }
    return 0;}
*/
